/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import dto.DtoConsulta;
import dto.DtoConsultaBase;
import dto.DtoMascota;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import modelo.Veterinario;
import controladores.ControladorConsultaBase;
import dto.DtoVacuna;
import controladores.MascotaControlador;
import java.awt.BorderLayout;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import static javax.swing.WindowConstants.EXIT_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kevin
 */
public class VentanaVacuna extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VentanaVacuna.class.getName());
    private VentanaServicios ventanaServicios;
    private ControladorConsultaBase controladorConsultaBase;
    private MascotaControlador controladorMascota;

    public VentanaVacuna(VentanaServicios ventanaServicios, MascotaControlador controladorMascota, ControladorConsultaBase controladorConsultaBase) {
        this.controladorConsultaBase = controladorConsultaBase;
        this.controladorMascota = controladorMascota;
        this.ventanaServicios = ventanaServicios;
        initComponents();
         setTitle("Gestion de Vacunas");
        setLocationRelativeTo(this);
        setLayout(new BorderLayout());
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        
    }

    public void LimpiarCampos() {
        txtCodigoVacuna.setText(null);
        txtIdMascotaVacuna.setText(null);
        txtLoteVacuna.setText(null);
        txtProximaDosisVacuna.setText(null);
        txtTipoVacuna.setText(null);
    }

    public void listarVacunas() {
        String[] columnas = {
            "Fecha", "Codigo", "Id Mascota", "Tipo", "Lote", "Proxima Dosis"
        };

        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        ArrayList<DtoConsultaBase> historial = controladorConsultaBase.listar();
        for (DtoConsultaBase registro : historial) {
            if (registro instanceof DtoVacuna) {
                DtoVacuna vacuna = (DtoVacuna) registro;

                Object[] fila = {
                    vacuna.getFecha(),
                    vacuna.getCodigo(),
                    vacuna.getIdMas(),
                    vacuna.getTipo(),
                    vacuna.getLote(),
                    vacuna.getProximaDosis()
                };

                modelo.addRow(fila);
            }
        }

        tablaVacunas.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        txtLoteVacuna = new javax.swing.JTextField();
        txtProximaDosisVacuna = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigoVacuna = new javax.swing.JTextField();
        txtIdMascotaVacuna = new javax.swing.JTextField();
        txtTipoVacuna = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaVacunas = new javax.swing.JTable();
        btnActualizarVacunas = new javax.swing.JButton();
        btnEditarVacuna = new javax.swing.JButton();
        btnBuscarVacuna = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(132, 169, 140));

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Vacuna");

        txtLoteVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoteVacunaActionPerformed(evt);
            }
        });

        jLabel2.setText("Codigo:");

        jLabel3.setText("Id Mascota:");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo:");

        jLabel5.setText("Lote:");

        jLabel6.setText("Proxima dosis:");

        txtTipoVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoVacunaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(68, 68, 68)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLoteVacuna)
                                    .addComponent(txtIdMascotaVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtProximaDosisVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtTipoVacuna, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addComponent(txtCodigoVacuna, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdMascotaVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigoVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtLoteVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtTipoVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtProximaDosisVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro de Vacunas", jPanel3);

        tablaVacunas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaVacunas);

        btnActualizarVacunas.setText("Actualizar");
        btnActualizarVacunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarVacunasActionPerformed(evt);
            }
        });

        btnEditarVacuna.setText("Editar");
        btnEditarVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarVacunaActionPerformed(evt);
            }
        });

        btnBuscarVacuna.setText("Buscar");
        btnBuscarVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVacunaActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(btnActualizarVacunas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditarVacuna)
                .addGap(12, 12, 12)
                .addComponent(btnBuscarVacuna)
                .addGap(12, 12, 12)
                .addComponent(btnEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizarVacunas)
                    .addComponent(btnEditarVacuna)
                    .addComponent(btnBuscarVacuna)
                    .addComponent(btnEliminar))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Gestion de Vacunas", jPanel4);

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenu)
                .addGap(30, 30, 30))
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnMenu)
                        .addGap(18, 18, 18)))
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTipoVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoVacunaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoVacunaActionPerformed

    private void txtLoteVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoteVacunaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoteVacunaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String idMas = txtIdMascotaVacuna.getText();
        String codigo = txtCodigoVacuna.getText();
        String lote = txtLoteVacuna.getText();
        String tipo = txtTipoVacuna.getText();
        String proximaDosis = txtProximaDosisVacuna.getText();

        if (idMas == null || idMas.isBlank() || codigo == null || codigo.isBlank() || lote == null || lote.isBlank() || tipo == null || tipo.isBlank()
                || proximaDosis == null || proximaDosis.isBlank()) {
            JOptionPane.showMessageDialog(this, "Por favor completa todos los campos correctamente.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int id;
        try {
            id = Integer.parseInt(idMas);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        LocalDate proximaDosis1;
        try {
            proximaDosis1 = LocalDate.parse(proximaDosis); // Intenta convertir
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Usa el formato AAAA-MM-DD.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Salir del método si hay error
        }

        DtoMascota m = controladorMascota.buscarMascota(id);
        if (m == null) {
            JOptionPane.showMessageDialog(this, "No existe la mascota con el ID: " + id);
            return;
        }

        DtoConsultaBase confirmar = controladorConsultaBase.buscarConsulta(codigo, DtoVacuna.class);

        if (confirmar == null) {
            // Crear la nueva consulta
            String fechaHoy = LocalDate.now().toString();

            DtoVacuna nueva = new DtoVacuna(tipo, lote, proximaDosis1.toString(), fechaHoy, id, codigo);

            boolean guardado = controladorConsultaBase.agregar(nueva, DtoVacuna.class);

            if (guardado) {
                listarVacunas(); // Refrescar tabla
                LimpiarCampos();
                JOptionPane.showMessageDialog(this, "La Vacuna se guardó correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Hubo un error al guardar la Vacuna.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ya existe una Vacuna con el mismo código.");
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarVacunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarVacunasActionPerformed
        listarVacunas();
    }//GEN-LAST:event_btnActualizarVacunasActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        this.setVisible(false);
        ventanaServicios.setVisible(true);

    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tablaVacunas.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una Vacuna para eliminar.");
            return;
        }

        String codigo = tablaVacunas.getValueAt(fila, 1).toString().trim(); // asegúrate de eliminar espacios
        int idMas = Integer.parseInt(tablaVacunas.getValueAt(fila, 2).toString());

        DtoConsultaBase confirmar = controladorConsultaBase.buscarConsulta(codigo, DtoVacuna.class);

        if (confirmar != null) {
            boolean eliminado = controladorConsultaBase.eliminarPorIdentificacion(codigo, DtoVacuna.class);

            if (eliminado) {
                listarVacunas(); // refrescar tabla
                JOptionPane.showMessageDialog(this, "La Vacuna se eliminó correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró una Vacuna con ese código.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la Vacuna seleccionada.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarVacunaActionPerformed
        int fila = tablaVacunas.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una Vacuna para continuar.");
            return;
        }

        String codigo = tablaVacunas.getValueAt(fila, 1).toString().trim();
        DtoConsultaBase confirmar = controladorConsultaBase.buscarConsulta(codigo, DtoVacuna.class);

        if (confirmar != null) {
            DtoVacuna nueva = (DtoVacuna) confirmar;

            String lote = JOptionPane.showInputDialog(this, "Ingrese el nuevo Lote:");
            if (lote == null) {
                JOptionPane.showMessageDialog(this, "Edición cancelada.");
                return;
            }

            String tipo = JOptionPane.showInputDialog(this, "Ingrese el nuevo Tipo:");
            if (tipo == null) {
                JOptionPane.showMessageDialog(this, "Edición cancelada.");
                return;
            }

            String nuevaFecha = JOptionPane.showInputDialog(this, "Ingrese la Fecha para la próxima dosis:");
            if (nuevaFecha == null) {
                JOptionPane.showMessageDialog(this, "Edición cancelada.");
                return;
            }

            // Validación campos vacíos
            if (lote.isBlank() || tipo.isBlank() || nuevaFecha.isBlank()) {
                JOptionPane.showMessageDialog(this, "Todos los campos deben estar completos.");
                return;
            }

            // Validación tipo (solo letras)
            if (!tipo.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+")) {
                JOptionPane.showMessageDialog(this, "El tipo de vacuna debe contener solo letras.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Validación fecha
            LocalDate fecha;
            try {
                fecha = LocalDate.parse(nuevaFecha);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Usa el formato AAAA-MM-DD.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Asignar datos y guardar
            nueva.setLote(lote.trim());
            nueva.setTipo(tipo.trim());
            nueva.setProximaDosis(fecha.toString());

            boolean guardado = controladorConsultaBase.actualizarConsulta(nueva, DtoVacuna.class);

            if (guardado) {
                listarVacunas();
                JOptionPane.showMessageDialog(this, "La vacuna se editó correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Hubo un error al editar la vacuna.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una vacuna válida.");
        }


    }//GEN-LAST:event_btnEditarVacunaActionPerformed

    private void btnBuscarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVacunaActionPerformed
        String codigo = JOptionPane.showInputDialog(this, "Ingrese el codigo de la consulta que desea buscar: ");
        if (codigo == null || codigo.isBlank()) {
            JOptionPane.showMessageDialog(this, "Porfavor llenar los campos para poder buscar la Vacuna.");
            return;
        }

        DtoConsultaBase existente = controladorConsultaBase.buscarConsulta(codigo, DtoVacuna.class);

        if (existente == null) {
            JOptionPane.showMessageDialog(this, "no existe ninguna Vacuna con el codigo: " + codigo);
            return;
        }
        DtoVacuna vacuna = (DtoVacuna) existente;

        JOptionPane.showMessageDialog(this, "Fecha: " + vacuna.getFecha() + "\nCodigo: " + vacuna.getCodigo()
                + "\nId Mascota: " + vacuna.getIdMas() + "\nTipo Vacuna: "
                + vacuna.getTipo() + "\nLote Vacuna: " + vacuna.getLote() + "\nProxima Dosis: " + vacuna.getProximaDosis());


    }//GEN-LAST:event_btnBuscarVacunaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create abtnActualizaray the form */
//        java.awt.EventQueue.invokeLater(() -> new VentanaVacuna().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarVacunas;
    private javax.swing.JButton btnBuscarVacuna;
    private javax.swing.JButton btnEditarVacuna;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaVacunas;
    private javax.swing.JTextField txtCodigoVacuna;
    private javax.swing.JTextField txtIdMascotaVacuna;
    private javax.swing.JTextField txtLoteVacuna;
    private javax.swing.JTextField txtProximaDosisVacuna;
    private javax.swing.JTextField txtTipoVacuna;
    // End of variables declaration//GEN-END:variables
}
