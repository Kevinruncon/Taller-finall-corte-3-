/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import javax.swing.JOptionPane;
import modelo.Veterinario;
import javax.swing.table.DefaultTableModel;
import controladores.ConsultaControlador;
import controladores.MascotaControlador;
import dto.DtoMascota;
import java.time.LocalDate;
import java.util.ArrayList;
import modelo.Consulta;
import modelo.Mascotas;
import dto.DtoConsultaBase;
import controladores.ControladorConsultaBase;
import dto.DtoConsulta;

/**
 *
 * @author Kevin
 */
public class VentanaMedicina extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VentanaMedicina.class.getName());
    private ControladorConsultaBase controladorConsultaBase;
    private VentanaServicios ventanaServicios;
    private MascotaControlador controladorMascota;

    public VentanaMedicina(VentanaServicios ventanaServicios, MascotaControlador controladorMascota, ControladorConsultaBase controladorConsultaBase) {
        this.ventanaServicios = ventanaServicios;
        this.controladorMascota = controladorMascota;
        this.controladorConsultaBase = controladorConsultaBase;
        initComponents();
        listarConsultas();
        setTitle("Gestion de Consultas");
        setLocationRelativeTo(this);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Especialidad");
        Veterinario vet1 = new Veterinario("Dra. Ana Gómez", "Medicina Interna");
        Veterinario vet2 = new Veterinario("Dr. Luis Torres", "Cirugía");
        modelo.addRow(new Object[]{vet1.getNombre(), vet1.getEspecialidad()});
        modelo.addRow(new Object[]{vet2.getNombre(), vet2.getEspecialidad()});
        tablaMedicina.setModel(modelo);
        DefaultTableModel modeloCons = new DefaultTableModel(new Object[]{"Fecha", "Codigo", "Nombre Mascota", "Documento propietario",
            "Nombre Veterinario", "Especialidad Veterinario", "Diagnostico", "Tratamiento"}, 0);
        tablaConsulta.setModel(modeloCons);
    }

    /* public void ListarConsulta(){
            String[] columnas = {"Fecha", "Codigo", "Nombre Mascota", "Documento propietario"
        , "Nombre Veterinario","Especialidad Veterinario", "Diagnostico","Tratamiento"};
          DefaultTableModel modeloCons = new DefaultTableModel(columnas, 0);
          ArrayList<Consulta> c = controladorConsulta.obtenerConsultas();
          if(c != null &&  !c.isEmpty())
          for(Consulta cons : c){
               Object[] fila = {cons.getFecha(),cons.getCodigo(),cons.getNombreMasCons(),
               cons.getDocumentoPropCons(),cons.getVeterinario().getNombre(),cons.getVeterinario().getEspecialidad()
               ,cons.getDiagnostico(),cons.getTratamiento()};
              
          modeloCons.addRow(fila);
          }
         tablaConsulta.setModel(modeloCons);
    }*/
    public void listarConsultas() {
        String[] columnas = {
            "Fecha", "Codigo", "Nombre Mascota", "Id Mascota", "Documento propietario",
            "Nombre Veterinario", "Especialidad Veterinario", "Diagnostico", "Tratamiento"
        };

        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        // Usar el controlador en lugar del DAO directamente
        ArrayList<DtoConsultaBase> historial = controladorConsultaBase.listar();

        for (DtoConsultaBase registro : historial) {
            if (registro instanceof DtoConsulta) {
                DtoConsulta consulta = (DtoConsulta) registro;

                Object[] fila = {
                    consulta.getFecha(),
                    consulta.getCodigo(),
                    consulta.getNombreMasCons(),
                    consulta.getIdMas(),
                    consulta.getDocumentoPropCons(),
                    consulta.getVeterinario().getNombre(),
                    consulta.getVeterinario().getEspecialidad(),
                    consulta.getDiagnostico(),
                    consulta.getTratamiento()
                };

                modelo.addRow(fila);
            }
        }

        tablaConsulta.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMedicinaIdMas = new javax.swing.JTextField();
        txtMedicinaCodigo = new javax.swing.JTextField();
        txtMedicinaTartamiento = new javax.swing.JTextField();
        txtMedicinaDiagnostico = new javax.swing.JTextField();
        btnMedicinaGurdar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMedicina = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaConsulta = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditarConsultas = new javax.swing.JButton();
        btnBuscarConsulta = new javax.swing.JButton();
        btnVolverVentanPrincipal = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(202, 210, 197));

        jPanel1.setBackground(new java.awt.Color(132, 169, 140));

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Medicina");

        jLabel3.setText("Id de la Mascota:");

        jLabel4.setText("Codigo:");

        jLabel6.setText("Tratamiento:");

        jLabel7.setText("Diagnostico:");

        txtMedicinaIdMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicinaIdMasActionPerformed(evt);
            }
        });

        btnMedicinaGurdar.setText("Registrar");
        btnMedicinaGurdar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicinaGurdarActionPerformed(evt);
            }
        });

        tablaMedicina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaMedicina);

        jLabel8.setText("LLenar Los siguientes campos para registrar una Consulta");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMedicinaGurdar)
                .addGap(173, 173, 173))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMedicinaCodigo)
                            .addComponent(txtMedicinaTartamiento)
                            .addComponent(txtMedicinaIdMas)
                            .addComponent(txtMedicinaDiagnostico)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMedicinaIdMas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMedicinaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtMedicinaTartamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtMedicinaDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)))
                .addComponent(btnMedicinaGurdar)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro de Consulta", jPanel3);

        tablaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaConsulta);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditarConsultas.setText("Editar");
        btnEditarConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarConsultasActionPerformed(evt);
            }
        });

        btnBuscarConsulta.setText("Buscar");
        btnBuscarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(btnActualizar)
                .addGap(58, 58, 58)
                .addComponent(btnEliminar)
                .addGap(56, 56, 56)
                .addComponent(btnEditarConsultas)
                .addGap(67, 67, 67)
                .addComponent(btnBuscarConsulta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(btnEditarConsultas)
                    .addComponent(btnBuscarConsulta))
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("Gestion de Consultas", jPanel4);

        btnVolverVentanPrincipal.setText("menu");
        btnVolverVentanPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverVentanPrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVolverVentanPrincipal)
                .addContainerGap())
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnVolverVentanPrincipal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnMedicinaGurdarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicinaGurdarActionPerformed
        String idMas = txtMedicinaIdMas.getText();
        String codigo = txtMedicinaCodigo.getText();
        String tratamiento = txtMedicinaTartamiento.getText();
        String diagnostico = txtMedicinaDiagnostico.getText();
        int fila = tablaMedicina.getSelectedRow();

        if (idMas == null || idMas.isBlank() || codigo.isBlank() || tratamiento.isBlank() || diagnostico.isBlank()) {
            JOptionPane.showMessageDialog(this, "Por favor completa todos los campos correctamente.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int id;
        try {
            id = Integer.parseInt(idMas);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona un veterinario para continuar con el registro.");
            return;
        }

        DtoMascota m = controladorMascota.buscarMascota(id);
        if (m == null) {
            JOptionPane.showMessageDialog(this, "No existe la mascota con el ID: " + id);
            return;
        }

        String nombre = tablaMedicina.getValueAt(fila, 0).toString();
        String especialidad = tablaMedicina.getValueAt(fila, 1).toString();
        Veterinario vetFin = new Veterinario(nombre, especialidad);

        // Verificar si ya existe una consulta con ese código
        DtoConsultaBase confirmar = controladorConsultaBase.buscarConsulta(codigo, DtoConsulta.class);

        if (confirmar == null) {
            // Crear la nueva consulta
            String fechaHoy = LocalDate.now().toString(); // o usa un DatePicker si lo tienes
            DtoConsulta nueva = new DtoConsulta(codigo, vetFin, m.getDocumentoPropietario(), m.getNombre(), diagnostico, tratamiento, fechaHoy, id);

            boolean guardado = controladorConsultaBase.agregar(nueva, DtoConsulta.class);

            if (guardado) {
                listarConsultas(); // Refrescar tabla
                JOptionPane.showMessageDialog(this, "La consulta se guardó correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Hubo un error al guardar la consulta.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ya existe una consulta con el mismo código.");
        }


    }//GEN-LAST:event_btnMedicinaGurdarActionPerformed

    private void txtMedicinaIdMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicinaIdMasActionPerformed


    }//GEN-LAST:event_txtMedicinaIdMasActionPerformed

    private void btnVolverVentanPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverVentanPrincipalActionPerformed
        this.setVisible(false);
        ventanaServicios.setVisible(true);

    }//GEN-LAST:event_btnVolverVentanPrincipalActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        listarConsultas();

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tablaConsulta.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una consulta para eliminar.");
            return;
        }

        String codigo = tablaConsulta.getValueAt(fila, 1).toString().trim(); // asegúrate de eliminar espacios
        //int idMas = Integer.parseInt(tablaConsulta.getValueAt(fila, 3).toString());

        DtoConsultaBase confirmar = controladorConsultaBase.buscarConsulta(codigo, DtoConsulta.class);

        if (confirmar != null) {
            boolean eliminado = controladorConsultaBase.eliminarPorIdentificacion(codigo, DtoConsulta.class);

            if (eliminado) {
                listarConsultas(); // refrescar tabla
                JOptionPane.showMessageDialog(this, "La consulta se eliminó correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró una consulta con ese código.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la consulta seleccionada.");
        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarConsultasActionPerformed

        int fila = tablaConsulta.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una Consulta para continuar.");
            return;
        }
        String codigo = tablaConsulta.getValueAt(fila, 1).toString().trim(); // asegúrate de eliminar espacios

        DtoConsultaBase confirmar = controladorConsultaBase.buscarConsulta(codigo, DtoConsulta.class);

        if (confirmar != null) {
            DtoConsulta nueva = (DtoConsulta) confirmar;
            String diagnostico = JOptionPane.showInputDialog(this, "Ingrese el nuevo diagnostico: ");
            String tratamiento = JOptionPane.showInputDialog(this, "Ingrese el nuevo tratamiento: ");

            if (diagnostico != null && !diagnostico.isBlank() && tratamiento != null && !tratamiento.isBlank()) {
                nueva.setDiagnostico(diagnostico);
                nueva.setTratamiento(tratamiento);

                boolean guardado = controladorConsultaBase.actualizarConsulta(nueva, DtoConsulta.class);

                if (guardado) {
                    listarConsultas(); // Refrescar tabla
                    JOptionPane.showMessageDialog(this, "La consulta se edito correctamente.");
                } else {
                    JOptionPane.showMessageDialog(this, "Hubo un error al editar la consulta.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Todos los campos deben estar completos.");
            }
        }

//    

    }//GEN-LAST:event_btnEditarConsultasActionPerformed

    private void btnBuscarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarConsultaActionPerformed

        String codigo = JOptionPane.showInputDialog(this, "Ingrese el codigo de la consulta que desea buscar: ");
        if (codigo == null || codigo.isBlank()) {
            JOptionPane.showMessageDialog(this, "Porfavor llenar los campos para poder buscar la Consulta.");
            return;
        }

        DtoConsultaBase existente = controladorConsultaBase.buscarConsulta(codigo, DtoConsulta.class);

        if (existente == null) {
            JOptionPane.showMessageDialog(this, "no existe ninguna consulta con el codigo: " + codigo);
            return;
        }
        DtoConsulta consulta = (DtoConsulta) existente;
        // String fecha = consulta.getFecha().toString().trim();
        /*  "Fecha", "Codigo", "Nombre Mascota", "Id Mascota" , "Documento propietario"
        , "Nombre Veterinario","Especialidad Veterinario", "Diagnostico","Tratamiento"
    };*/
        JOptionPane.showMessageDialog(this, "Fecha: " + consulta.getFecha() + "\nCodigo: " + consulta.getCodigo()
                + "\nNombre Mascota: " + consulta.getNombreMasCons() + "\nId Mascota: " + consulta.getIdMas() + "\nDocumento Propietario: "
                + consulta.getDocumentoPropCons() + "\nNombre Veterinario: " + consulta.getVeterinario().getNombre() + "\nEspecialidad Propietario: " + consulta.getVeterinario().getEspecialidad()
                + "\nDiagnostico: " + consulta.getDiagnostico() + "\nTratamiento: " + consulta.getTratamiento());

    }//GEN-LAST:event_btnBuscarConsultaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> new VentanaMedicina().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscarConsulta;
    private javax.swing.JButton btnEditarConsultas;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMedicinaGurdar;
    private javax.swing.JButton btnVolverVentanPrincipal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablaConsulta;
    private javax.swing.JTable tablaMedicina;
    private javax.swing.JTextField txtMedicinaCodigo;
    private javax.swing.JTextField txtMedicinaDiagnostico;
    private javax.swing.JTextField txtMedicinaIdMas;
    private javax.swing.JTextField txtMedicinaTartamiento;
    // End of variables declaration//GEN-END:variables
}
