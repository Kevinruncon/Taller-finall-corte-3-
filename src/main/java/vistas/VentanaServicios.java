
package vistas;
import controladores.ControladorConsultaBase;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import vistas.VentanaPrincipal;
import controladores.MascotaControlador;

public class VentanaServicios extends javax.swing.JFrame {
    private MascotaControlador controladorMascota ;
    private VentanaMedicina ventanaMedicina;
    private VentanaPrincipal ventanaPrincipal;
    private VentanaVacuna ventanaVacuna;
    private ControladorConsultaBase controladorConsultaBase;
    private VentanaHistorial ventanaHistorial;
  public VentanaServicios(VentanaPrincipal ventanaPrincipal, MascotaControlador controladorMascota, ControladorConsultaBase controladorConsultaBase ) {
      this.ventanaMedicina = ventanaMedicina;
      this.ventanaHistorial = ventanaHistorial;
        this.ventanaPrincipal = ventanaPrincipal;
        this.controladorMascota = controladorMascota ;
        this.ventanaVacuna = ventanaVacuna;
         this.controladorConsultaBase = new ControladorConsultaBase();
        initComponents();
        setTitle("Servicios");
        setSize(700, 500);
        setLocationRelativeTo(this);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
//        setVisible(true);
        // Crear el nodo raíz del árbol con el nombre "Carpeta"
        DefaultMutableTreeNode carpeta = new DefaultMutableTreeNode("Atencion Medica");

        // Crear nodos hijos para los diferentes servicios
        DefaultMutableTreeNode medicina = new DefaultMutableTreeNode("Medicina General");
        DefaultMutableTreeNode vacuna = new DefaultMutableTreeNode("Vacuna");
        DefaultMutableTreeNode historial = new DefaultMutableTreeNode("Historial");
        DefaultMutableTreeNode salir = new DefaultMutableTreeNode("Salir");

        // Agregar los nodos hijos al nodo raíz (carpeta)
        carpeta.add(medicina);
        carpeta.add(vacuna);
        carpeta.add(historial);
        carpeta.add(salir);

        // Crear el modelo del árbol usando el nodo raíz y asignarlo al JTree
        DefaultTreeModel modelo = new DefaultTreeModel(carpeta);
        servicios.setModel(modelo);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        servicios = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(132, 169, 140));

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestion de Servicios ");

        jButton1.setText("Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(41, 41, 41))
        );

        servicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serviciosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(servicios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        ventanaPrincipal.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void serviciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serviciosMouseClicked
                DefaultMutableTreeNode nodo = (DefaultMutableTreeNode) servicios.getLastSelectedPathComponent();
                if (nodo == null) return;

                String opcion = nodo.toString();
 
                switch (opcion) {
                    case "Medicina General":
                        if(ventanaMedicina == null){
                        ventanaMedicina = new VentanaMedicina(this, controladorMascota,controladorConsultaBase);
                        }
                        this.setVisible(false);
                        ventanaMedicina.setVisible(true);
                        break;
                    case "Vacuna": 
                        if(ventanaVacuna == null){
                            ventanaVacuna = new VentanaVacuna(this, controladorMascota,controladorConsultaBase);
                        }
                        this.setVisible(false);
                        ventanaVacuna.setVisible(true);
                        break;
                    case "Historial": 
                        if(ventanaHistorial == null){
                            ventanaHistorial = new VentanaHistorial(this,controladorMascota,controladorConsultaBase);
                        }
                        this.setVisible(false);
                        ventanaHistorial.setVisible(true);
                        break;
                    case "Salir":
                        int confirmar = JOptionPane.showConfirmDialog(null, "¿Deseas salir?", "Confirmación", JOptionPane.YES_NO_OPTION);
                        if (confirmar == JOptionPane.YES_OPTION) System.exit(0);
                        break;
                    
                } 

    }//GEN-LAST:event_serviciosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new VentanaServicios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree servicios;
    // End of variables declaration//GEN-END:variables
}
